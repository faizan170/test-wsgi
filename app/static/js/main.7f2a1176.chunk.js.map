{"version":3,"sources":["Endpoint/index.js","components/NavBar/index.js","components/ProductFoundations/index.js","components/Products/index.js","components/AddProductFoundation/index.js","components/Register/index.js","components/Login/index.js","components/EditProductFoundation/index.js","components/ViewProductFoundation/index.js","components/Home/index.js","components/Users/index.js","components/Logout/index.js","App.js","serviceWorker.js","index.js"],"names":["url","NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleCollapse","setState","isOpen","state","user_name","user_id","_this2","fetch","concat","localStorage","getItem","then","response","json","responseJsons","catch","error","console","react_default","a","createElement","react_router","to","mdbreact_esm","color","dark","expand","className","react_router_dom","onClick","id","navbar","left","active","right","waves","type","placeholder","aria-label","React","Component","ProductFoundations","deleteFoundation","method","body","JSON","stringify","foundation_id","datanew","productFoundations","filter","item","foundationId","ToastsStore","success","startTraining","Pid","trainingLoader","trainingText","length","info","product_id","responseJson","isLoading","dataSource","productId","match","params","product_foundations","_this3","NavBar_NavBar","style","position","top","role","Helmet","charSet","product_title","width","window","innerWidth","margin","map","key","md","foundationName","icon","fontWeight","lib","store","Products","deleteProduct","value","btnAddState","handleChange","bind","assertThisInitialized","handleSubmit","event","target","preventDefault","product_c_name","product_name","data","push","productName","_this4","cellSpacing","onSubmit","onChange","required","autoComplete","AddFoundation","textValidation","foundationProImg","foundationProImgF","foundationType","foundationUrl","foundationFileVal","foundationFile","foundationDetails","pid","e","name","files","defineProperty","FormData","append","label","group","rows","lg","sm","Register","userName","userEmail","userPassword","requestMessage","history","text","userEmailRepeat","textAlign","paddingTop","Login","setItem","EditFoundation","editId","foundation_name","foundation_type","foundation_image","foundation_url","foundation_desc","validate","size","ViewFoundation","shade_id","shadeId","jsonData","foundation_date","alt","height","src","foundation_product","marginTop","href","Home","dataLine","chart","products","fab","users","es","options","responsive","Users","approveUser","p_id","obj","user_approved","disapproveUser","warning","temp","status","user_email","user_date","Logout","removeItem","BasicExample","exact","path","component","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7f2a1176.chunk.js","sourcesContent":["// export const url = \"http://localhost:5000\"\nexport const url = \"\"","import React from 'react';\nimport {url} from '../../Endpoint'\nimport './App.css'\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBFormInline } from 'mdbreact';\nexport default class NavBar extends React.Component {\n   \n  constructor(props){\n    super(props);\n    this.state ={ user_name:'', user_id:'', isOpen: false}\n  }\n  toggleCollapse = () => {\n    this.setState({ isOpen: !this.state.isOpen });\n  }\n  \n\n  componentDidMount(){\n    return fetch(`${url}/user-details/` + localStorage.getItem(\"username\"))\n      .then((response) => response.json())\n      .then((responseJsons) => {\n\n        this.setState({\n          user_name: responseJsons.user_name,\n          user_id: responseJsons.user_id\n        }, function(){\n          \n        });\n      })\n      .catch((error) =>{\n        console.error(error);\n      });\n  }\n  render(){\n    if (localStorage.getItem(\"username\") === null) {\n      return <Redirect to='/login'  />\n    }\n    return(\n      <MDBNavbar color=\"indigo\" dark expand=\"md\">\n        <MDBNavbarBrand>\n          <strong className=\"white-text\"><Link to=\"/\" className=\"navbar-brand\">Foundation Findr</Link></strong>\n        </MDBNavbarBrand>\n        <MDBNavbarToggler onClick={this.toggleCollapse} />\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\n          <MDBNavbarNav left>\n            <MDBNavItem active>\n              <MDBNavLink to=\"/\">Home</MDBNavLink>\n            </MDBNavItem>\n            <MDBNavItem>\n              <MDBNavLink to=\"/products\">Products</MDBNavLink>\n            </MDBNavItem>\n            {\n              this.state.user_id === 1 ?\n              <MDBNavItem>\n                <MDBNavLink to=\"/users\">Users</MDBNavLink>\n              </MDBNavItem>\n              :\n              <MDBNavItem></MDBNavItem>\n            }\n          </MDBNavbarNav>\n          <MDBNavbarNav right>\n            <MDBNavItem>\n              <MDBFormInline waves>\n                <div className=\"md-form my-0\">\n                  <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" />\n                </div>\n              </MDBFormInline>\n            </MDBNavItem>\n            <MDBNavItem>\n              <MDBNavLink to=\"\">{ this.state.user_name }</MDBNavLink>\n            </MDBNavItem>\n            {\n              localStorage.getItem(\"username\") !== null ?\n              <MDBNavItem>\n                <MDBNavLink to=\"/logout\">Logout</MDBNavLink>\n              </MDBNavItem>\n              :\n              <span></span>\n            }\n          </MDBNavbarNav>\n        </MDBCollapse>\n      </MDBNavbar>\n        \n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport NavBar from '../NavBar';\nimport {url} from '../../Endpoint'\nimport { MDBRow, MDBCol, MDBBtn, MDBIcon } from 'mdbreact';\nimport {ToastsContainer, ToastsStore} from 'react-toasts';\nimport {Helmet} from \"react-helmet\";\n\n\nexport default class ProductFoundations extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataSource: null,\n      isLoading: true,\n      productId: props.match.params.productId,\n      trainingText: '',\n      trainingLoader: 'hide-loader',\n      productFoundations: ''\n    };\n  }\n\n  componentDidMount(){\n    return fetch(`${url}/get-product-foundations/` + this.state.productId)\n      .then((response) => response.json())\n      .then((responseJson) => {\n        if (responseJson.product_foundations.length < 5){\n          this.setState({trainingText: \"Atleast 5 foundations required for training\"})\n        }\n        this.setState({\n          isLoading: false,\n          dataSource: responseJson,\n          productFoundations: responseJson.product_foundations\n        }, function(){\n          \n        });\n\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }\n\n  deleteFoundation = id => {\n    fetch(`${url}/delete-foundation`, {\n      method: 'POST',\n      body: JSON.stringify({\n        foundation_id: id\n      })\n    });\n    let data = this.state.productFoundations;\n    let datanew = data.filter(item => item.foundationId !== id);\n    this.setState({ productFoundations: datanew });\n    ToastsStore.success(\"Foundation deleted\");\n  };\n\n  startTraining = Pid => {\n    this.setState({\n      trainingLoader: 'show-loader',\n      trainingText:\n        'Started: ETA :' +\n        this.state.productFoundations.length +\n        ' seconds'\n    });\n    ToastsStore.info(\"Training Started\");\n    fetch(`${url}/process-foundation`, {\n      method: 'POST',\n      body: JSON.stringify({\n        product_id: Pid\n      })\n    })\n      .then(response => response.json())\n      .then(responseJson => {\n        this.setState(\n          {\n            isLoading: false,\n            trainingText: 'Completed',\n            trainingLoader: 'hide-loader'\n          },\n          function() {}\n        );\n        ToastsStore.success(\"Training Completed\");\n      });\n  };\n\n  render() {\n    if (this.state.isLoading) {\n      return (\n        <div>\n          <NavBar />\n        <div className=\"text-center\">\n        <div className=\"spinner-border text-primary\" style={{ position:\"absolute\", top:\"50%\" }} role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Product - {this.state.dataSource.product_title}</title>\n        </Helmet>\n        <NavBar />\n        <br />\n        <div className=\"container\">\n          <div className=\"float-left\">\n            <h2 className=\"product-title\">\n              {this.state.dataSource.product_title}\n            </h2>\n          </div>\n          <div className=\"float-right\">\n            <Link\n              to={`/product/addfoundation/${this.props.match.params.productId}`}\n              className=\"btn btn-primary\"\n              style={{\n                width: window.innerWidth <= 400 ? '330px' : '',\n                margin: 'auto'\n              }}\n            >\n              Add new Foundation\n            </Link>\n          </div>\n          <div className=\"clearfix\" />\n          <hr />\n          <div className=\"row\">\n            <div className=\"col-md-8 col-sm-12\">\n              {this.state.productFoundations.map(item => (\n                <div key={item.foundationId}>\n                  <MDBRow className=\"foundationRow\">\n                    <MDBCol md=\"9\">\n                      <h4>\n                        <Link to={`/product/foundation/${item.foundationId}`}>\n                          {item.foundationName}\n                        </Link>\n                      </h4>\n                    </MDBCol>\n\n                    <div className=\"change\">\n                      <MDBCol md=\"1\">\n                        <button\n                          className=\"btn-floating\"\n                          onClick={() =>\n                            this.deleteFoundation(item.foundationId)\n                          }\n                        >\n                          <MDBIcon icon=\"trash\" />\n                        </button>\n                      </MDBCol>\n\n                      <MDBCol md=\"1\">\n                        <button className=\"btn-floating btn-edit\">\n                          <Link\n                            to={`/product/edit-foundation/${item.foundationId}`}\n                          >\n                            <MDBIcon className=\"btn-edit-icon\" icon=\"edit\" />\n                          </Link>\n                        </button>\n                      </MDBCol>\n                    </div>\n                  </MDBRow>\n                  <hr />\n                </div>\n              ))}\n            </div>\n            <div className=\"col-md-4 co-sm-12\">\n              <h3>Training</h3>\n              <MDBBtn onClick={()=> this.startTraining(this.props.match.params.productId)}>Start</MDBBtn>\n                \n              <div className={`spinner-border text-primary ${this.state.trainingLoader}`} role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </div>\n              <br />\n              {this.state.trainingText}\n              <br />\n              <h3\n                className=\"text-blue\"\n                style={{ fontWeight: 'bold', color: 'blue' }}\n              >\n                Meta Data\n              </h3>\n              <p>\n                <b>Total Foundations:</b>{' '}\n                {this.state.dataSource.product_foundations.length}{' '}\n              </p>\n            </div>\n          </div>\n        </div>\n        <ToastsContainer store={ToastsStore}/>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport NavBar from \"../NavBar\"\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport {url} from '../../Endpoint'\nimport {ToastsContainer, ToastsStore} from 'react-toasts';\nimport {Helmet} from \"react-helmet\";\nexport default class Products extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state ={ isLoading: true, value: '', btnAddState:'Add Product'};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount(){\n    return fetch(`${url}/get-products/` + localStorage.getItem(\"username\"))\n      .then((response) => response.json())\n      .then((responseJson) => {\n        this.setState({\n          isLoading: false,\n          dataSource: responseJson,\n        }, function(){\n\n        });\n\n      })\n      .catch((error) =>{\n        console.error(error);\n      });\n  }\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    //alert('A name was submitted: ' + this.state.value);\n    event.preventDefault();\n    \n    let product_c_name = this.state.value;\n    if(this.state.value !== \"\"){\n        fetch(`${url}/add-product`, {\n        method: 'POST',\n        body: JSON.stringify({\n            product_name: this.state.value,\n            user_id: localStorage.getItem(\"username\")\n        })\n        })\n        .then((response) => response.json())\n        .then((responseJson) => {\n          let data = this.state.dataSource\n          data.push({productId:responseJson.id, productName: product_c_name});\n          this.setState({dataSource:data});\n          ToastsStore.success(\"New Product Added\");\n          /*\n          this.setState({\n            isLoading: false,\n            dataSource: responseJson,\n          }, function(){\n  \n          });\n          */\n        })\n        .catch((error) =>{\n          console.error(error);\n        });\n        this.setState({value:\"\"});\n    }\n  }\n  deleteProduct = (id) => {\n    fetch(`${url}/delete-product`, {\n      method: 'POST',\n      body: JSON.stringify({\n          product_id: id,\n      })\n      })\n      this.setState({value:\"\"});\n      let data = this.state.dataSource\n      let datanew = data.filter((item)=> item.productId !== id)\n      this.setState({dataSource: datanew})\n      ToastsStore.success(\"Product deleted\");\n  }\n\n  \n  \n   \n  render(){\n\n    if(this.state.isLoading){\n      return(\n        <div>\n          <NavBar />\n        <div className=\"text-center\">\n        <div className=\"spinner-border text-primary\" style={{ position:\"absolute\", top:\"50%\" }} role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n        </div>\n      )\n    }\n\n\n    return(\n      <div>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Products</title>\n        </Helmet>\n        <NavBar />\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-8\">\n                    <table id=\"dt-select\" className=\"table table-striped\" cellSpacing=\"0\" width=\"100%\">\n                        <thead>\n                            <tr>\n                                <th>Product Name</th>\n                                <th>Delete</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.state.dataSource.map(item => (     \n                                <tr key = {item.productId}>\n                                    <td>\n                                        <Link to={`/product/${item.productId}`}>{item.productName}</Link>\n                                    </td>\n                                    <td>\n                                        <button type=\"button\" onClick={()=> this.deleteProduct(item.productId)}>Delete</button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n                <div className=\"col-4\">\n                    <h2>Add Product</h2>\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"md-form\">\n                            <input type=\"text\" value={this.state.value} onChange={this.handleChange} id=\"materialLoginFormEmail\" className=\"form-control\" required autoComplete=\"off\" />\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-primary btn-disabeled\">Add Product</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n        <ToastsContainer store={ToastsStore}/>\n        </div>\n    );\n  }\n}\n","import React from 'react';\nimport {MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBInput} from \"mdbreact\"\nimport {ToastsContainer, ToastsStore} from 'react-toasts';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport NavBar from \"../NavBar\"\nimport {url} from '../../Endpoint'\nimport {Helmet} from \"react-helmet\";\n\nexport default class AddFoundation extends React.Component {\n    constructor(props){\n        super(props);\n        this.state ={ isLoading: true, textValidation:'', foundationProImg:'', foundationProImgF:'',\n             foundationName: '', foundationType:'Pro Filtr Mattee Longwear Foundation',\n              foundationUrl:'https://www.fentybeauty.com/pro-filtr/soft-matte-longwear-foundation/FB30006.html?dwvar_FB30006_color=FB0490',\n               foundationFileVal:\"\", foundationFile:null, foundationDetails:\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\", productId: props.match.params.pid};\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n\n      handleChange(e) {\n        \n          if(e.target.name === \"file\"){\n            this.setState({foundationFile:e.target.files[0], foundationFileVal:e.target.value})\n          }\n          else if(e.target.name === \"fileProImg\"){\n            this.setState({foundationProImgF:e.target.files[0], foundationProImg:e.target.value})\n          }\n          else{\n        this.setState({[e.target.name]: e.target.value});\n          }\n      }\n    \n      handleSubmit(event) {\n        //alert('A name was submitted: ' + this.state.value);\n        event.preventDefault();\n        const data = new FormData();\n        data.append('foundationFile', this.state.foundationFile);\n        data.append('foundationName', this.state.foundationName);\n        data.append('foundationType', this.state.foundationType);\n        data.append('foundationUrl', this.state.foundationUrl);\n        data.append('foundationDetails', this.state.foundationDetails);\n        data.append('productId', this.state.productId);\n        data.append(\"foundationProduct\", this.state.foundationProImgF);\n\n        if(this.state.value !== \"\"){\n            fetch(`${url}/add-foundation`, {\n            method: 'POST',\n            body: data,\n            })\n        }\n        ToastsStore.success(\"New Foundation added Successfully!\");\n            this.setState({foundationName:\"\", foundationType: \"\", foundationUrl:\"\", foundationFileVal:\"\", foundationDetails:\"\"});\n      }\n     \n  render(){\n    return(\n        <div>\n            <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Add New Foundation</title>\n        </Helmet>\n            <NavBar />\n        <MDBContainer>\n            <MDBRow>\n                <MDBCol md=\"12\">\n                <MDBCard>\n                    <MDBCardBody className=\"mx-4\">\n                    <div className=\"text-center\">\n                        <h3 className=\"pink-text mb-5\">\n                        <strong>Add New Foundation</strong>\n                        </h3>\n                    </div>\n                    <form onSubmit={this.handleSubmit}>\n                        <MDBRow>\n                            <MDBCol md=\"6\">\n                                <MDBInput name=\"foundationName\" value={this.state.foundationName} onChange={this.handleChange} label=\"Foundation Name\" group type=\"text\" required />\n                            </MDBCol>\n                            <MDBCol md=\"6\">\n                                <MDBInput name=\"foundationType\" value={this.state.foundationType} onChange={this.handleChange} label=\"Foundation type\" group type=\"text\" required />\n                            </MDBCol>\n                        </MDBRow>\n                        <MDBRow>\n                            <MDBCol md=\"6\">\n                                <h5 style={{ color: \"#09F\" }}>Face Image</h5>\n                                <input type=\"file\" id=\"file\" value={this.state.foundationFileVal} name=\"file\" onChange={this.handleChange} required />\n                            </MDBCol>\n                            <MDBCol md=\"6\">\n                            <h5 style={{ color: \"#09F\" }}>Product Image</h5>\n                                <input type=\"file\" id=\"fileProImg\" value={this.state.foundationProImg} name=\"fileProImg\" onChange={this.handleChange} required />\n                            </MDBCol>\n                        </MDBRow>\n                        <MDBRow>\n                            <MDBCol md=\"12\">\n                                <MDBInput name=\"foundationUrl\" value={this.state.foundationUrl} onChange={this.handleChange} label=\"Foundation URL\" group type=\"text\" required />\n                            </MDBCol>\n                        </MDBRow>\n                        <MDBRow>\n                            <MDBCol md=\"12\">\n                                <MDBInput name=\"foundationDetails\" type=\"textarea\" value={this.state.foundationDetails} onChange={this.handleChange} label=\"Foundation Details\" rows=\"5\" required />\n                            </MDBCol>\n                        </MDBRow>\n                        <MDBRow>\n                            <MDBCol lg=\"3\" md=\"4\" sm=\"6\">\n                            <button type=\"submit\" className=\"btn btn-blue btn-block btn-rounded z-depth-1\">\n                                Add Foundation\n                            </button>\n                            </MDBCol>\n                            <MDBCol lg=\"6\" md=\"4\" sm=\"6\">\n                                { this.state.textValidation }\n                            </MDBCol>\n                        </MDBRow>\n                    </form>\n                    </MDBCardBody>\n                    \n                </MDBCard>\n                </MDBCol>\n            </MDBRow>\n        </MDBContainer>\n        <ToastsContainer store={ToastsStore}/>\n    </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { url } from \"../../Endpoint\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport {\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCardBody,\n  MDBEdgeHeader,\n  MDBFreeBird\n} from \"mdbreact\";\nimport { Helmet } from \"react-helmet\";\nexport default class Register extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      requestMessage: \"\",\n      userName: \"\",\n      userEmail: \"\",\n      userEmailRepeat: \"\",\n      userPassword: \"\"\n    };\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    fetch(`${url}/register`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        userName: this.state.userName,\n        userEmail: this.state.userEmail,\n        userPassword: this.state.userPassword\n      })\n    })\n      .then(response => response.json())\n      .then(responseJson => {\n        this.setState(\n          {\n            isLoading: false\n          },\n          function() {\n            if (responseJson.success) {\n              this.setState({ requestMessage: \"Success! Redirecting\" });\n              this.props.history.push(\"/login\");\n            } else this.setState({ requestMessage: responseJson.text });\n          }\n        );\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Register</title>\n        </Helmet>\n        <MDBEdgeHeader\n          color=\"mdb-color darken-2\"\n          style={{ textAlign: \"center\" }}\n        >\n          <h3 style={{ color: \"white\", fontWeight: \"bold\", paddingTop: 30 }}>\n            {\" \"}\n            Foundation Shade Finder - Admin Panel{\" \"}\n          </h3>\n        </MDBEdgeHeader>\n        <MDBFreeBird>\n          <MDBRow>\n            <MDBCol\n              md=\"8\"\n              lg=\"7\"\n              className=\"mx-auto float-none white z-depth-1 py-2 px-2\"\n            >\n              <MDBCardBody>\n                <form onSubmit={this.handleSubmit}>\n                  <p className=\"h4 text-center py-4\">Sign up</p>\n                  <div className=\"grey-text\">\n                    <MDBInput\n                      label=\"Your name\"\n                      name=\"userName\"\n                      value={this.state.userName}\n                      onChange={this.handleChange}\n                      id=\"userName\"\n                      group\n                      type=\"text\"\n                      required\n                      error=\"wrong\"\n                      success=\"right\"\n                    />\n                    <MDBInput\n                      label=\"Your email\"\n                      name=\"userEmail\"\n                      value={this.state.userEmail}\n                      onChange={this.handleChange}\n                      group\n                      type=\"email\"\n                      required\n                      error=\"wrong\"\n                      success=\"right\"\n                    />\n                    <MDBInput\n                      label=\"Confirm your email\"\n                      name=\"userEmailRepeat\"\n                      value={this.state.userEmailRepeat}\n                      onChange={this.handleChange}\n                      group\n                      type=\"text\"\n                      required\n                      error=\"wrong\"\n                      success=\"right\"\n                    />\n                    <MDBInput\n                      label=\"Your password\"\n                      name=\"userPassword\"\n                      value={this.state.userPassword}\n                      onChange={this.handleChange}\n                      group\n                      type=\"password\"\n                      required\n                    />\n                  </div>\n                  <div className=\"text-center py-4 mt-3\">\n                    <MDBBtn color=\"cyan\" type=\"submit\">\n                      Register\n                    </MDBBtn>\n                  </div>\n                  <div style={{ color: \"#F00\", fontWeight: \"bolder\" }}>\n                    {this.state.requestMessage}\n                  </div>\n                </form>\n                <p>\n                  Already Have Account? <Link to=\"/login\">Login Now</Link>\n                </p>\n              </MDBCardBody>\n            </MDBCol>\n          </MDBRow>\n        </MDBFreeBird>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport {url} from '../../Endpoint'\nimport {Helmet} from \"react-helmet\";\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport { MDBRow, MDBCol, MDBInput, MDBBtn, MDBCardBody, MDBCardTitle, MDBEdgeHeader, MDBFreeBird } from 'mdbreact';\nexport default class Login extends React.Component {\n\n    constructor(){\n        super()\n        this.state ={  userEmail:\"\", userPassword:\"\", requestMessage:'' }\n    }\n  \n    handleChange = (e) => {\n      this.setState({[e.target.name]: e.target.value});\n    }\n    \n    handleSubmit =(event) => {\n      event.preventDefault();\n            this.setState({requestMessage:\"\"})\n            fetch(`${url}/login`, {\n            method: 'POST',\n            body: JSON.stringify({\n              userEmail: this.state.userEmail,\n              userPassword: this.state.userPassword,\n            })\n            })\n            .then((response) => response.json())\n            .then((responseJson) => {\n            this.setState({\n                isLoading: false,\n            }, function(){\n                if(responseJson.success){\n                    this.setState({requestMessage: \"Success! Redirecting\"})\n                    localStorage.setItem(\"username\", this.state.userEmail)\n                    this.props.history.push('/')\n                }else if(responseJson.type === \"unapproved\"){\n                  this.setState({requestMessage: \"You are not approved by admin Yet.\"})\n                }\n                else\n                  this.setState({requestMessage: \"Incorrect Username or Password\"})\n            });\n            });\n            \n        //this.setState({userEmail: \"\", userPassword:\"\"});\n        \n        \n    }\n   \n  render(){\n    return(\n      <div>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Login</title>\n        </Helmet>\n        <MDBEdgeHeader color=\"mdb-color darken-2\" style={{textAlign:\"center\"}}>\n          <h3 style={{color:'white', fontWeight:'bold', paddingTop:30}}> Foundation Shade Finder - Admin Panel </h3>\n        </MDBEdgeHeader>\n        <MDBFreeBird>\n          <MDBRow>\n            <MDBCol md=\"8\" lg=\"7\" className=\"mx-auto float-none white z-depth-1 py-2 px-2\">\n              <MDBCardBody>\n                <MDBCardTitle>Login Now</MDBCardTitle>\n                <br />\n                <form onSubmit={this.handleSubmit}>\n                <div className=\"grey-text\">\n                  <MDBInput\n                    label=\"Your email\"\n                    name = \"userEmail\"\n                    value={this.state.userEmail} \n                    onChange={this.handleChange}\n                    group\n                    type=\"email\"\n                    required\n                    error=\"wrong\"\n                    success=\"right\"\n                  />\n                  <MDBInput\n                    label=\"Your password\"\n                    name = \"userPassword\"\n                    value={this.state.userPassword} \n                    onChange={this.handleChange}\n                    group\n                    type=\"password\"\n                    required\n                  />\n                </div>\n                <div className=\"text-center py-4 mt-3\">\n                  <MDBBtn color=\"cyan\" type=\"submit\">\n                    LogIn\n                  </MDBBtn>\n                </div>\n                <div className=\"message\">{ this.state.requestMessage }</div>\n              </form>\n              <p>New User? <Link to=\"/register\">Register Now</Link></p>\n              </MDBCardBody>\n            </MDBCol>\n          </MDBRow>\n        </MDBFreeBird>\n      </div>\n              \n    );\n  }\n}\n","import React from 'react';\nimport {MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBInput} from \"mdbreact\"\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport NavBar from \"../NavBar\"\nimport {url} from '../../Endpoint'\nimport {ToastsContainer, ToastsStore} from 'react-toasts';\nimport {Helmet} from \"react-helmet\";\n\nexport default class EditFoundation extends React.Component {\n    constructor(props){\n        super(props);\n        this.state ={ isLoading: true, dataSource:null, foundationName: '', foundationType:'',\n         foundationUrl:'', foundationFileVal:\"\", foundationFile:null, foundationDetails:'',\n          foundationId: props.match.params.editId};\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n\n      componentDidMount(){\n        return fetch(`${url}/foundation-details/` + this.state.foundationId)\n          .then((response) => response.json())\n          .then((responseJson) => {\n    \n            this.setState({\n              isLoading: false,\n              dataSource: responseJson,\n              foundationName: responseJson.foundation_name,\n              foundationType: responseJson.foundation_type,\n              foundationFile: responseJson.foundation_image,\n              foundationUrl: responseJson.foundation_url,\n              foundationDetails: responseJson.foundation_desc,\n            }, function(){\n            });\n    \n          })\n          .catch((error) =>{\n            console.error(error);\n          });\n      }\n\n      handleChange(event) {\n        if(event.target.id === \"foundationName\"){\n            this.setState({foundationName: event.target.value});\n        }else if(event.target.id === \"foundationType\"){\n            this.setState({foundationType:event.target.value})\n        }else if(event.target.id === \"foundationUrl\"){\n            this.setState({foundationUrl:event.target.value})\n        }else if(event.target.id === \"file\"){\n            this.setState({foundationFile:event.target.files[0], foundationFileVal:event.target.value})\n        }else if(event.target.id === \"foundationDet\"){\n            this.setState({foundationDetails:event.target.value})\n        }\n      }\n    \n      handleSubmit(event) {\n        //alert('A name was submitted: ' + this.state.value);\n        event.preventDefault();\n        const data = new FormData();\n        data.append('foundationFile', this.state.foundationFile);\n        data.append('foundationName', this.state.foundationName);\n        data.append('foundationType', this.state.foundationType);\n        data.append('foundationUrl', this.state.foundationUrl);\n        data.append('foundationDetails', this.state.foundationDetails);\n        data.append('foundationId', this.state.foundationId);\n    \n\n        if(this.state.value !== \"\"){\n            fetch(`${url}/edit-foundation`, {\n            method: 'POST',\n            body: data,\n            })\n        }\n        ToastsStore.success('Foundation updated sucessfully!');\n            this.setState({foundationName:\"\", foundationType: \"\", foundationUrl:\"\", foundationFileVal:\"\"});\n      }\n     \n  render(){\n\n    if (this.state.isLoading) {\n        return (\n          <div>\n            <NavBar />\n          <div className=\"text-center\">\n          <div className=\"spinner-border text-primary\" style={{ position:\"absolute\", top:\"50%\" }} role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n          </div>\n          </div>\n        );\n      }\n    return(\n\n        \n        <div>\n            <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Edit Foundation</title>\n        </Helmet>\n            <NavBar />\n        <MDBContainer>\n            <MDBRow>\n                <MDBCol md=\"12\">\n                <MDBCard>\n                    <MDBCardBody className=\"mx-4\">\n                    <div className=\"text-center\">\n                        <h3 className=\"pink-text mb-5\">\n                        <strong>Edit Foundation</strong>\n                        </h3>\n                    </div>\n                    <form onSubmit={this.handleSubmit}>\n                        <MDBRow>\n                            <MDBCol md=\"6\">\n                                <MDBInput id=\"foundationName\" value={this.state.foundationName} onChange={this.handleChange} label=\"Foundation Name\" group type=\"text\" validate />\n                            </MDBCol>\n                            <MDBCol md=\"6\">\n                                <MDBInput id=\"foundationType\" value={this.state.foundationType} onChange={this.handleChange} label=\"Foundation type\" group type=\"text\" validate />\n                            </MDBCol>\n                        </MDBRow>\n                        <MDBRow>\n                            <MDBCol md=\"4\">\n                                <input type=\"file\" id=\"file\" value={this.state.foundationFileVal} name=\"file\" onChange={this.handleChange} />\n                            </MDBCol>\n                        </MDBRow>\n                        <MDBRow>\n                            <MDBCol md=\"12\">\n                                <MDBInput id=\"foundationUrl\" value={this.state.foundationUrl} onChange={this.handleChange} label=\"Foundation URL\" group type=\"text\" validate />\n                            </MDBCol>\n                        </MDBRow>\n                        <MDBRow>\n                            <MDBCol md=\"12\">\n                                <MDBInput id=\"foundationDet\" value={this.state.foundationDetails} onChange={this.handleChange} type=\"textarea\" label=\"Foundation Details\" rows=\"5\" />\n                            </MDBCol>\n                        </MDBRow>\n                        <MDBRow>\n                            <MDBCol size=\"12\" lg=\"3\" md=\"4\" sm=\"6\">\n                            <button type=\"submit\" className=\"btn btn-blue btn-block btn-rounded z-depth-1\">\n                                Update\n                            </button>\n                            </MDBCol>\n                        </MDBRow>\n                    </form>\n                    </MDBCardBody>\n                    \n                </MDBCard>\n                </MDBCol>\n            </MDBRow>\n        </MDBContainer>\n        <ToastsContainer store={ToastsStore}/>\n    </div>\n    );\n  }\n}\n","import React from 'react';\nimport NavBar from '../NavBar';\nimport {url} from '../../Endpoint'\nimport {Helmet} from \"react-helmet\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBJumbotron\n} from 'mdbreact';\nexport default class ViewFoundation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      shadeId: props.match.params.foundationId,\n      jsonData: null\n    };\n  }\n\n  componentDidMount() {\n    return fetch(\n      `${url}/foundation-details/` + this.state.shadeId\n    )\n      .then(response => response.json())\n      .then(responseJson => {\n        this.setState(\n          {\n            isLoading: false,\n            jsonData: responseJson\n          },\n          function() {}\n        );\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }\n\n  deleteFoundation = id => {\n    fetch(`${url}/delete-foundation`, {\n      method: 'POST',\n      body: JSON.stringify({\n        shade_id: id\n      })\n    });\n    let data = this.state.dataSource;\n    let datanew = data.filter(item => item.shadeId !== id);\n    this.setState({ dataSource: datanew });\n  };\n\n  render() {\n    if (this.state.isLoading) {\n      return (\n        <div>\n          <NavBar />\n        <div className=\"text-center\">\n        <div className=\"spinner-border text-primary\" style={{ position:\"absolute\", top:\"50%\" }} role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Foundation - {this.state.jsonData.foundation_name }</title>\n        </Helmet>\n        <NavBar />\n        <br />\n        <div className=\"container\">\n          <h2>{this.state.jsonData.foundation_name}</h2>\n\n          <hr />\n          <MDBContainer>\n            <MDBRow>\n              <MDBCol>\n                <MDBJumbotron>\n                  <MDBRow>\n                    <MDBCol>\n                      <div>\n                        <h1>{this.state.jsonData.foundation_type}</h1>\n                        <p>{this.state.jsonData.foundation_date}</p>\n                      </div>\n                    </MDBCol>\n                  </MDBRow>\n                  <MDBRow>\n                    <MDBCol>\n                      <MDBRow>\n                        <MDBCol>\n                          <img alt=\"Face Product\"\n                            style={{ margin: 10 }}\n                            height=\"200\"\n                            src={`${url}/foundation-image/${\n                              this.state.jsonData.foundation_image\n                            }`}\n                          />\n                        </MDBCol>\n                        <MDBCol>\n                          <img alt=\"Product Foundation\"\n                            style={{ margin: 10 }}\n                            height=\"200\"\n                            src={`${url}/foundation-image/${\n                              this.state.jsonData.foundation_product\n                            }`}\n                          />\n                        </MDBCol>\n                      </MDBRow>\n                    </MDBCol>\n                  </MDBRow>\n                  <div style={{ marginTop: 50 }}>\n                    <div className=\"foundation-url\">\n                      <a href={this.state.jsonData.foundation_url}>\n                        {this.state.jsonData.foundation_url}\n                      </a>\n                    </div>\n                    <div className=\"foundation-details\">\n                      <div className=\"header\">Details</div>\n                      <p>{this.state.jsonData.foundation_desc}</p>\n                    </div>\n                  </div>\n                </MDBJumbotron>\n              </MDBCol>\n            </MDBRow>\n          </MDBContainer>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport NavBar from \"../NavBar\"\nimport { Line } from \"react-chartjs-2\";\nimport {url} from '../../Endpoint'\nimport {Helmet} from \"react-helmet\";\nimport {MDBContainer, MDBRow, MDBCol, MDBIcon, MDBCard, MDBCardBody, MDBCardTitle, MDBCardText} from \"mdbreact\"\n\nexport default class Home extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state ={ isLoading: true, jsonData: null,\n        dataLine: null\n    \n    }\n  }\n\n  componentDidMount(){\n    return fetch(`${url}/mainpage-details/` + localStorage.getItem(\"username\"))\n      .then((response) => response.json())\n      .then((responseJson) => {\n\n        this.setState({\n          isLoading: false,\n          jsonData: responseJson,\n          dataLine: responseJson.chart\n        }, function(){\n\n        });\n      })\n      .catch((error) =>{\n        console.error(error);\n      });\n  }\n\n  \n  render(){\n\n    if(this.state.isLoading){\n      return(\n        <div>\n          <NavBar />\n        \n        <div className=\"text-center\">\n          <div className=\"spinner-border text-primary\" style={{ position:\"absolute\", top:\"50%\" }} role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n        </div>\n      )\n    }\n\n    \n    \n    return(\n        <div>\n          <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Home - Admin</title>\n        </Helmet>\n        <NavBar />\n          <br />\n          <MDBContainer>\n            <h2>Admin Panel</h2>\n            <hr />\n            <MDBRow>\n              <MDBCol md=\"9\">\n                <MDBRow>\n                  <MDBCol>\n                    <MDBCard style={{ width: \"22rem\" }}>\n                      <MDBCardBody>\n                        <div className=\"float-left\">\n                        <MDBCardTitle>Products</MDBCardTitle>\n                        <MDBCardText>\n                          <h2>{ this.state.jsonData.products.length }</h2>\n                        </MDBCardText>\n                        </div>\n                        <div className=\"float-right\">\n                        <MDBIcon fab icon=\"product-hunt\" size=\"4x\" className=\"blue-text\" />\n                        </div>\n                      </MDBCardBody>\n                    </MDBCard>\n  \n                  </MDBCol>\n                  { this.state.jsonData.user_id === 1 ?\n                  <MDBCol>\n                    <MDBCard style={{ width: \"22rem\" }}>\n                      <MDBCardBody>\n                        <MDBCardTitle>Users</MDBCardTitle>\n                        <MDBCardText>\n                          <h2>{ this.state.jsonData.users.length }</h2>\n                        </MDBCardText>\n                      </MDBCardBody>\n                    </MDBCard>\n                  </MDBCol>\n                  :\n                    <span></span>\n                  }\n                </MDBRow>\n  \n  \n                <MDBRow>\n                  <MDBCol>\n                  <h3 className=\"mt-5\">chart</h3>\n                  <Line data={this.state.dataLine} options={{ responsive: true }} />\n                  </MDBCol>\n                </MDBRow>\n            </MDBCol>\n            \n            </MDBRow>\n          </MDBContainer>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css'\nimport {url} from '../../Endpoint'\nimport { BrowserRouter as Redirect } from \"react-router-dom\";\nimport NavBar from \"../NavBar\"\nimport {ToastsContainer, ToastsStore} from 'react-toasts';\nimport {Helmet} from \"react-helmet\";\nimport {MDBContainer, MDBRow, MDBCol, MDBBtn, MDBTableBody, MDBTable, MDBTableHead} from \"mdbreact\"\n\nexport default class Users extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state ={ isLoading: true, jsonData: null,\n      color:false,\n      temp:false\n    }\n  }\n\n  componentDidMount(){\n    return fetch(`${url}/users-list/` + localStorage.getItem(\"username\"))\n      .then((response) => response.json())\n      .then((responseJson) => {\n\n        this.setState({\n          isLoading: false,\n          jsonData: responseJson\n        }, function(){\n\n        });\n      })\n      .catch((error) =>{\n        console.error(error);\n      });\n  }\n\n  approveUser = (id) => {\n    fetch(`${url}/approve-user`, {\n      method: 'POST',\n      body: JSON.stringify({\n          user_id: id,\n          p_id: localStorage.getItem(\"username\")\n      })\n      })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        if(responseJson.success){\n          let data = this.state.jsonData;\n          let datanew = data.map(item => {\n            \n            if(item.user_id === id) {\n             let obj = item;\n             obj.user_approved = 1;\n             return obj;\n            }\n            else{\n              return item;\n            }\n          \n          });\n\n          this.setState({ jsonData: datanew})\n\n          ToastsStore.success(\"User Approved\");\n\n        }\n      })\n      .catch((error) =>{\n        console.error(error);\n      });\n  }\n  disapproveUser = (id) => {\n  fetch(`${url}/disapprove-user`, {\n    method: 'POST',\n    body: JSON.stringify({\n        user_id: id,\n        p_id: localStorage.getItem(\"username\")\n    })\n    })\n    .then((response) => response.json())\n      .then((responseJson) => {\n        if(responseJson.success){\n          let data = this.state.jsonData;\n          let datanew = data.map(item => {\n            \n            if(item.user_id === id) {\n             let obj = item;\n             obj.user_approved = 0;\n             return obj;\n            }\n            else{\n              return item;\n            }\n          \n          });\n\n          this.setState({ jsonData: datanew})\n\n          ToastsStore.warning(\"User Disapproved\");\n\n        }\n      })\n      .catch((error) =>{\n        console.error(error);\n      });\n}\n\n  \n  render(){\n    \n\n    if(this.state.isLoading){\n      return(\n        <div>\n          <NavBar />\n        <div className=\"text-center\">\n          <div className=\"spinner-border text-primary\" style={{ position:\"absolute\", top:\"50%\" }} role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n        </div>\n      )\n    }\n\n    if(this.state.jsonData.status === \"not-allowed\"){\n        return <Redirect to='/'  />\n    }\n\n    return(\n        <div>\n          <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>All Users</title>\n        </Helmet>\n        <NavBar />\n          <br />\n          <MDBContainer>\n            <h2>Users</h2>\n            <hr />\n            <MDBRow>\n                <MDBCol md=\"9\">\n                \n                <MDBTable>\n                    <MDBTableHead>\n                        <th>#</th>\n                        <th>Name</th>\n                        <th>Email</th>\n                        <th>Join Data</th>\n                        <th>Approve Status</th>\n                    </MDBTableHead>\n                    <MDBTableBody>\n                    {this.state.jsonData.map(item => (\n                       <tr key={item.user_id}>\n                           <td>{ item.user_id }</td>\n                           <td>{ item.user_name }</td>\n                           <td>{ item.user_email }</td>\n                           <td>{ item.user_date }</td>\n                           <td>\n                           {item.user_approved === 1 ?\n                           <MDBBtn className=\"userBtn\" color=\"dark-green\" onClick={()=> this.disapproveUser(item.user_id)}><span>&nbsp;Approved&nbsp;&nbsp;</span></MDBBtn>\n                           : \n                           <MDBBtn color=\"light-blue\" onClick={()=> this.approveUser(item.user_id)}>Approve</MDBBtn>\n                           }\n                           </td>\n\n                       </tr> \n                    ))}\n                    </MDBTableBody>\n                </MDBTable>\n\n                </MDBCol>\n            </MDBRow>\n          </MDBContainer>\n          <ToastsContainer store={ToastsStore}/>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport { MDBRow, MDBCol, MDBInput, MDBBtn, MDBCardBody, MDBCardTitle, MDBEdgeHeader, MDBFreeBird } from 'mdbreact';\nexport default class Logout extends React.Component {\n\n\n   \n  render(){\n      if(localStorage.getItem(\"username\") !== null){\n          localStorage.removeItem(\"username\")\n        return <Redirect to='/login'  />\n      }\n    \n  }\n}\n","import React from 'react';\nimport './App.css';\nimport \"mdbootstrap/css/bootstrap.min.css\"\n\nimport ProductFoundations from \"./components/ProductFoundations\"\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Products from \"./components/Products\"\nimport AddFoundation from './components/AddProductFoundation';\nimport Register from './components/Register';\nimport Login from './components/Login'\nimport EditFoundation from './components/EditProductFoundation'\n\nimport ViewFoundation from './components/ViewProductFoundation'\nimport Home from './components/Home'\nimport Users from './components/Users'\nimport Logout from './components/Logout';\n\nfunction BasicExample() {\n  return (\n    <Router>\n      <div>\n        <Route exact path=\"/admin\" component={Home} />\n        <Route path=\"/products\" component={Products} />\n        <Route exact path=\"/product/:productId\" component = {ProductFoundations} />\n        <Route exact path=\"/product/addfoundation/:pid\" component = {AddFoundation} />\n        <Route exact path=\"/register\" component = {Register} />\n        <Route exact path=\"/login\" component = {Login} />\n        <Route exact path=\"/product/edit-foundation/:editId\" component = {EditFoundation}></Route>\n        <Route exact path=\"/product/foundation/:foundationId\" component = {ViewFoundation}></Route>\n        <Route exact path=\"/users\" component = {Users}></Route>\n        <Route exact path=\"/logout\" component = {Logout} ></Route>\n      </div>\n    </Router>\n  );\n}\n\n\n\n\nexport default BasicExample;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}